#!/usr/bin/env bash

# Install Rails

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
log_info() {
  printf "\n\e[0;35m $1\e[0m\n\n"
}

log_info "Updating Packages ..."
  sudo apt-get update

log_info "Installing Git ..."
  sudo apt-get -y install git

log_info "Installing base ruby build dependencies ..."
  sudo apt-get -y build-dep ruby1.9.3

log_info "Installing libraries for common gem dependencies ..."
  sudo apt-get -y install libxslt1-dev libcurl4-openssl-dev libksba8 libksba-dev libqtwebkit-dev libreadline-dev

log_info "Installing sqlite3 ..."
 sudo apt-get -y install libsqlite3-dev sqlite3

log_info "Installing Postgres ..."
  sudo apt-get -y install postgresql postgresql-server-dev-all postgresql-contrib

log_info "Installing Redis ..."
  sudo apt-get -y install redis-server

log_info "Installing curl ..."
  sudo apt-get -y install curl

log_info "Installing rbenv ..."
  git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"

if [[ ! -d "$HOME/.rbenv/plugins/rbenv-gem-rehash" ]]; then
  log_info "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
    git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
fi

if [[ ! -d "$HOME/.rbenv/plugins/ruby-build" ]]; then
  log_info "Installing ruby-build, to install Rubies ..."
    git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
fi

RUBY_VERSION="2.1.1"

log_info "Installing Ruby $RUBY_VERSION ..."
  rbenv install $RUBY_VERSION

log_info "Setting $RUBY_VERSION as global default Ruby ..."
  rbenv global $RUBY_VERSION
  rbenv rehash

log_info "Updating to latest Rubygems version ..."
  gem update --system

log_info "Installing Rails ..."
  gem install rails -V

log_info "Installing Bundler ..."
  gem install bundler --no-document --pre

log_info "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(nproc)
  bundle config --global jobs $((number_of_cores - 1))

# Custom Packages

log_info "Installing ImageMagick ..."
  sudo apt-get -y install imagemagick

log_info "Installing watch, to execute a program periodically and show the output ..."
  sudo apt-get -y install watch

log_info "Installing Heroku CLI client ..."
  curl -s https://toolbelt.heroku.com/install-ubuntu.sh | sh

log_info "Installing rake ..."
  sudo apt-get -y install rake

log_info "Installing ubuntu-restricted-extras ..."
  sudo apt-get -y install ubuntu-restricted-extras

log_info "Installing Node.js ..."
  sudo apt-get -y install python-software-properties python g++ make
  sudo add-apt-repository ppa:chris-lea/node.js
  sudo apt-get update
  sudo apt-get -y install nodejs

log_info "Installing Sublime Text 3 ..."
  sudo add-apt-repository ppa:webupd8team/sublime-text-3
  sudo apt-get update
  sudo apt-get -y install sublime-text-installer

log_info "Installing youtube-dl ..."
  sudo apt-get -y install youtube-dl

log_info "Installing VLC ..."
  sudo apt-get -y install vlc browser-plugin-vlc

log_info "Installing Chromium ..."
  sudo apt-get -y install chromium-browser

log_info "Installing Google Chrome ..."
  cd /tmp
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  sudo dpkg -i google-chrome-stable_current_amd64.deb
  cd
